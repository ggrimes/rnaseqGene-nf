// Enable DSL2
nextflow.enable.dsl = 2

// Enable Wave
wave {
    enabled = true
    freeze = true
    strategy = 'conda'
}

// Default parameters
params {
    fastq_reads = null
    fasta_reference = null
    outdir = 'results'
}

// Process-specific configurations
process {
    // Default settings for all processes
    cpus = 2
    memory = '4 GB'
    
    withName: 'SALMON_INDEX' {
        cpus = 4
        memory = '8 GB'
    }
    
    withName: 'SALMON_QUANT' {
        cpus = 6
        memory = '16 GB'
    }
}

// Executor configuration (adjust as needed)
executor {
    name = 'local'
    queueSize = 8
}

// Reporting configuration
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Function to validate inputs
def validateParameters() {
    if (!params.fastq_reads) {
        exit 1, "Input fastq reads not specified with e.g. '--fastq_reads \"path/to/reads/*_{1,2}.fastq.gz\"'"
    }
    if (!params.fasta_reference) {
        exit 1, "Input fasta reference not specified with e.g. '--fasta_reference path/to/reference.fasta'"
    }
}

// Call the validation function
validateParameters()

// Workflow completion handler
workflow.onComplete = {
    println "Pipeline completed at: $workflow.complete"
    println "Execution status: ${workflow.success ? 'OK' : 'failed'}"
}
